<?php

/**
* Implementation of hook_clone_node_alter().
*/
function uc_attribute_clone_clone_node_alter(&$node, $context) {
  if (in_array($node->type, uc_product_types())) {
    $node->uc_attribute_clone = $context['original_node']->nid;
    if ($context['method'] == 'prepopulate') {
      if (empty($_POST['op'])) {
        drupal_set_message(t('Product attributes and options will be copied when you submit.'));
      }
    }
  }
}

/**
* Implementation of hook_form_alter().
*/
function uc_attribute_clone_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['type']['#value']) && $form['type']['#value'] .'_node_form' == $form_id) {
    if (isset($form['#node']->uc_attribute_clone)) {
      $form['uc_attribute_clone'] = array(
        '#type' => 'hidden',
        '#value' => $form['#node']->uc_attribute_clone,
      );
    }
  }
}

/**
 * Implementation of hook_node_insert().
 */
function uc_attribute_clone_node_insert($node) {
  if (isset($node->uc_attribute_clone)) {
    db_query("DELETE FROM {uc_product_attributes} WHERE nid = :nid", array(':nid' => $node->nid));
    db_query("DELETE FROM {uc_product_options} WHERE nid = :nid", array(':nid' => $node->nid));
    db_query("INSERT INTO {uc_product_attributes} (nid, aid, label, ordering, required, display, default_option) SELECT :nid, aid, label, ordering, required, display, default_option FROM {uc_product_attributes} WHERE nid = :clone_nid", array(':nid' => $node->nid, ':clone_nid' => $node->uc_attribute_clone));
    db_query("INSERT INTO {uc_product_options} (nid, oid, cost, price, weight, ordering) SELECT :nid, oid, cost, price, weight, ordering FROM {uc_product_options} WHERE nid = :clone_nid", array(':nid' => $node->nid, ':clone_nid' => $node->uc_attribute_clone));
  }
}
